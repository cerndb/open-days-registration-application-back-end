//Copyright (C) 2019, CERN
//This software is distributed under the terms of the GNU General Public
//Licence version 3 (GPL Version 3), copied verbatim in the file "LICENSE".
//In applying this license, CERN does not waive the privileges and immunities
//granted to it by virtue of its status as Intergovernmental Organization
//or submit itself to any jurisdiction.
package ch.cern.opendays.Constants;

public class CustomQueryConstants {

    // get visit days and remove days where the user has reservation
    public static final String GET_AVAILABLE_VISIT_DAYS = ""
            + "SELECT  "
            + "	total_opening_days.openDay AS openDay, "
            + "	total_opening_days.privilegedOpening AS privilegedOpening "
            + "FROM  "
            + "	(SELECT  "
            + "	    opening_hour.OPEN_DAY AS openDay, "
            + "	    opening_hour.PRIVILEGED_OPENING AS privilegedOpening  "
            + "	FROM  "
            + "	    ARRIVAL_POINT_OPENING_HOUR opening_hour  "
            + "	GROUP BY  "
            + "	    opening_hour.OPEN_DAY, "
            + "	    opening_hour.PRIVILEGED_OPENING) total_opening_days "
            + "MINUS "
            + "SELECT "
            + "    existing_reservations.visitDay, "
            + "    privilage_flag.privilegedOpening "
            + "FROM "
            + "    (SELECT "
            + "        reservation.VISIT_DAY AS visitDay, "
            + "        0 AS joinColumn "
            + "     FROM "
            + "        RESERVATION reservation "
            + "     WHERE "
            + "      reservation.RESERVATION_STATUS IN (3) AND "
            + "      reservation.ID_REGISTRATION = :idRegistration) existing_reservations "
            + "   INNER JOIN "
            + "    (SELECT 1 as privilegedOpening, 0 AS joinColumn FROM DUAL "
            + "     UNION "
            + "     SELECT 0 as privilegedOpening, 0 AS joinColumn FROM DUAL) privilage_flag "
            + "   ON "
            + "     privilage_flag.joinColumn = existing_reservations.joinColumn ";

    public static final String GET_DATE_BASED_AVAILABLE_PLACES_TABLE = ""
            + "SELECT "
            + "  base_opening_information.visitDay AS visitDay, "
            + "  base_opening_information.idArrivalPoint AS idArrivalPoint, "
            + "  base_opening_information.timeslotStart AS timeslotStart, "
            + "  base_opening_information.openingDurrationMinutes AS openingDurrationMinutes, "
            + "  CASE "
            + "    WHEN base_opening_information.availablePlaces-NVL(existing_reservations.numberOfReservedTickets,0) + NVL(userBooking.userBookedTickets,0) >= 6 "
            + "      THEN base_opening_information.availablePlaces-NVL(existing_reservations.numberOfReservedTickets,0) + NVL(userBooking.userBookedTickets,0) "
            + "    ELSE 0 END AS availablePlaces, "
            + "  CASE "
            + "    WHEN (base_opening_information.availablePlaces*(base_opening_information.fastTrackPercentage/100))-NVL(numberOfReservedFastTrackTickets,0) + NVL(userBooking.userBookedFastTrackTickets,0) >= 6 "
            + "      THEN (base_opening_information.availablePlaces*(base_opening_information.fastTrackPercentage/100))-NVL(numberOfReservedFastTrackTickets,0) + NVL(userBooking.userBookedFastTrackTickets,0) "
            + "    ELSE 0 END AS availableFastTrackPlaces "
            + "FROM "
            + "  (SELECT  "
            + "     arrivalPointOpening.OPEN_DAY AS visitDay, "
            + "     arrivalPointOpening.ID_ARRIVAL_POINT AS idArrivalPoint, "
            + "     arrivalPointOpening.TIMESLOT_START AS timeslotStart, "
            + "     arrivalPointOpening.OPENING_DURRATION_IN_MINUTES AS openingDurrationMinutes, "
            + "     ((100-arrivalPointOpening.CAPACITY_LIMITATION_PERCENTAGE)/100) * arrivalPointOpening.TOTAL_AVAILABLE_PLACES AS availablePlaces, "
            + "     arrivalPointOpening.TOTAL_AVAILABLE_PLACES AS totalAvailablePlaces, "
            + "     arrivalPointOpening.CAPACITY_LIMITATION_PERCENTAGE AS limitation, "
            + "     arrivalPointOpening.FAST_TRACK_PERCENTAGE AS fastTrackPercentage "
            + "   FROM  "
            + "     ARRIVAL_POINT_OPENING_HOUR arrivalPointOpening "
            + "   WHERE  "
            + "     arrivalPointOpening.OPEN_DAY = :openDay ) base_opening_information "
            + "LEFT JOIN "
            + "  (SELECT "
            + "     SUM(reservation.NUMBER_OF_RESERVED_TICKETS) AS numberOfReservedTickets, "
            + "     SUM(reservation.NUMBER_OF_FAST_TRACK_TICKETS) AS numberOfReservedFastTrackTickets, "
            + "     reservation.ID_ARRIVAL_POINT AS idArrivalPoint, "
            + "     reservation.VISIT_DAY AS visitDay, "
            + "     reservation.TIMESLOT_START AS timeslotStart "
            + "   FROM "
            + "     RESERVATION reservation "
            + "   WHERE "
            + "     reservation.RESERVATION_STATUS IN (3) OR "
            + "     (reservation.RESERVATION_STATUS IN (2) AND "
            + "     reservation.CHANGE_DATE >= CAST((CURRENT_TIMESTAMP - (35/1440)) AS TIMESTAMP)) "
            + "   GROUP BY "
            + "     reservation.ID_ARRIVAL_POINT, "
            + "     reservation.TIMESLOT_START, "
            + "     reservation.VISIT_DAY) existing_reservations "
            + "ON "
            + "  base_opening_information.visitDay = existing_reservations.visitDay AND "
            + "  base_opening_information.idArrivalPoint = existing_reservations.idArrivalPoint AND "
            + "  base_opening_information.timeslotStart = existing_reservations.timeslotStart "
            + "LEFT JOIN "
            + "  (SELECT "
            + "     reservation.NUMBER_OF_FAST_TRACK_TICKETS AS userBookedFastTrackTickets, "
            + "     reservation.NUMBER_OF_RESERVED_TICKETS AS userBookedTickets, "
            + "     reservation.ID_ARRIVAL_POINT AS userSelectedIdArrivalPoint, "
            + "     reservation.VISIT_DAY AS userSelectedVisitDay, "
            + "     reservation.TIMESLOT_START AS userSelectedTimeslotStart "
            + "   FROM "
            + "     RESERVATION reservation "
            + "   WHERE "
            + "     reservation.ID_RESERVATION = :idReservation AND "
            + "     reservation.RESERVATION_STATUS IN (2,3) )userBooking "
            + "ON "
            + "  base_opening_information.visitDay = userBooking.userSelectedVisitDay AND "
            + "  base_opening_information.idArrivalPoint = userBooking.userSelectedIdArrivalPoint AND "
            + "  base_opening_information.timeslotStart = userBooking.userSelectedTimeslotStart ";

    public static final String GET_NUMBER_OF_FREE_PLACES_PER_DAYS = ""
            + "SELECT "
            + "    SUM(base_opening_information.availablePlaces) - SUM(existing_reservations.numberOfReservedTickets) AS availablePlaces, "
            + "    base_opening_information.visitDay AS visitDay /*, "
            + "    base_opening_information.idArrivalPoint ,  "
            + "    base_opening_information.timeslotStart */ "
            + "FROM  "
            + "    (SELECT   "
            + "        arrivalPointOpening.OPEN_DAY AS visitDay,  "
            + "        arrivalPointOpening.ID_ARRIVAL_POINT AS idArrivalPoint,  "
            + "        arrivalPointOpening.TIMESLOT_START AS timeslotStart,  "
            + "        ((100-arrivalPointOpening.CAPACITY_LIMITATION_PERCENTAGE)/100) * arrivalPointOpening.TOTAL_AVAILABLE_PLACES AS availablePlaces  "
            + "    FROM   "
            + "        OD_SCHEMA_PROD.ARRIVAL_POINT_OPENING_HOUR arrivalPointOpening) base_opening_information "
            + "LEFT JOIN "
            + "    (SELECT  "
            + "        SUM(reservation.NUMBER_OF_RESERVED_TICKETS) AS numberOfReservedTickets,  "
            + "        reservation.ID_ARRIVAL_POINT AS idArrivalPoint,  "
            + "        reservation.VISIT_DAY AS visitDay,  "
            + "        reservation.TIMESLOT_START AS timeslotStart  "
            + "    FROM  "
            + "        RESERVATION reservation  "
            + "    WHERE  "
            + "        reservation.RESERVATION_STATUS IN (3) OR  "
            + "        (reservation.RESERVATION_STATUS IN (2) AND  "
            + "        reservation.CHANGE_DATE >= CAST((CURRENT_TIMESTAMP - (35/1440)) AS TIMESTAMP))  "
            + "    GROUP BY  "
            + "        reservation.ID_ARRIVAL_POINT,  "
            + "        reservation.TIMESLOT_START,  "
            + "        reservation.VISIT_DAY) existing_reservations  "
            + "    ON  "
            + "        base_opening_information.visitDay = existing_reservations.visitDay AND  "
            + "        base_opening_information.idArrivalPoint = existing_reservations.idArrivalPoint AND  "
            + "        base_opening_information.timeslotStart = existing_reservations.timeslotStart  "
            + "GROUP BY "
            + "    base_opening_information.visitDay ";

    public static final String GET_TICKET_DATA_FROM_VISITORS_METADATA = ""
            + "SELECT "
            + "    REQUESTED_FAST_TRACK AS ticketIsFastTrack, "
            + "    COUNT(*) AS reservedTickets "
            + "FROM "
            + "VISITOR_DETAIL "
            + "WHERE "
            + "    ID_RESERVATION = :idReservation "
            + "GROUP BY "
            + "    REQUESTED_FAST_TRACK ";

    public static final String GET_AVAILABLE_PLACES_FOR_TIMESLOT = ""
            + "SELECT "
            //            + "    --baseTicketInformation.capacityLimitation, "
            //            + "    --baseTicketInformation.totalAvailablePlaces, "
            //            + "    --baseTicketInformation.availablePlaces, "
            //            + "    --totalReservedTicketInformation.totalReservedTickets, "
            + "    baseTicketInformation.availablePlaces - NVL(totalReservedTicketInformation.totalReservedTickets,0) AS availablePlaces, "
            //            + "    --baseTicketInformation.availablePlaces, "
            //            + "    --baseTicketInformation.fastTrackPercentage, "
            //            + "    --baseTicketInformation.availablePlaces * baseTicketInformation.fastTrackPercentage/100 AS fastTrackPossibleTickets, "
            //            + "    --totalReservedTicketInformation.totalReservedFastTrackTickets, "
            + "    (baseTicketInformation.availablePlaces * baseTicketInformation.fastTrackPercentage/100)-NVL(totalReservedTicketInformation.totalReservedFastTrackTickets,0) AS fastTrackAvailablePlaces "
            + "FROM "
            + "    (SELECT  "
            + "        ((100-arrivalPointDetails.CAPACITY_LIMITATION_PERCENTAGE)/100) * arrivalPointDetails.TOTAL_AVAILABLE_PLACES AS availablePlaces, "
            + "        arrivalPointDetails.FAST_TRACK_PERCENTAGE AS fastTrackPercentage, "
            + "        arrivalPointDetails.CAPACITY_LIMITATION_PERCENTAGE AS capacityLimitation, "
            + "        arrivalPointDetails.TOTAL_AVAILABLE_PLACES AS totalAvailablePlaces, "
            + "        arrivalPointDetails.OPEN_DAY AS visitDay, "
            + "        arrivalPointDetails.ID_ARRIVAL_POINT AS idArrivalPoint, "
            + "        arrivalPointDetails.TIMESLOT_START AS timeslotStart "
            + "    FROM  "
            + "        ARRIVAL_POINT_OPENING_HOUR arrivalPointDetails  "
            + "    WHERE "
            + "        arrivalPointDetails.OPEN_DAY = :visitDay AND "
            + "        arrivalPointDetails.ID_ARRIVAL_POINT = :idArrivalPoint AND "
            + "        arrivalPointDetails.TIMESLOT_START = :timeslotStart) baseTicketInformation "
            + "LEFT JOIN "
            + "    (SELECT  "
            + "        bookedReservations.VISIT_DAY AS visitDay, "
            + "        bookedReservations.ID_ARRIVAL_POINT AS idArrivalPoint, "
            + "        bookedReservations.TIMESLOT_START AS timeslotStart, "
            + "        SUM(bookedreservations.number_of_reserved_tickets) AS totalReservedTickets, "
            + "        SUM(bookedreservations.number_of_fast_track_tickets) AS totalReservedFastTrackTickets "
            + "    FROM "
            + "        RESERVATION bookedReservations "
            + "    WHERE    "
            + "        bookedReservations.VISIT_DAY = :visitDay AND "
            + "        bookedReservations.ID_ARRIVAL_POINT = :idArrivalPoint AND "
            + "        bookedReservations.TIMESLOT_START = :timeslotStart AND "
            + "        bookedReservations.RESERVATION_STATUS IN (3,5) OR "
            + "        (bookedReservations.RESERVATION_STATUS IN (2) AND "
            + "        bookedReservations.CHANGE_DATE >= CAST((CURRENT_TIMESTAMP - (35/1440)) AS TIMESTAMP)) "
            + "    GROUP BY        "
            + "        bookedReservations.VISIT_DAY, "
            + "        bookedReservations.ID_ARRIVAL_POINT, "
            + "        bookedReservations.TIMESLOT_START) totalReservedTicketInformation ON "
            + "    baseticketinformation.visitDay = totalReservedTicketInformation.visitDay AND "
            + "    baseticketinformation.idArrivalPoint = totalReservedTicketInformation.idArrivalPoint AND "
            + "    baseticketinformation.timeslotStart = totalReservedTicketInformation.timeslotStart";

}
